/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("ledsegment")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ledsegment[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ledsegment";
}

SIGNAL("ledsegment[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ledsegment";
}

SIGNAL("ledsegment[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ledsegment";
}

SIGNAL("ledsegment[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ledsegment";
}

SIGNAL("ledsegment[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ledsegment";
}

SIGNAL("ledsegment[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ledsegment";
}

SIGNAL("ledsegment[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ledsegment";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Current_register")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Current_register[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Current_register[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Current_register";
}

SIGNAL("Input")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Input[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("Input[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("Input[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("Input[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("Input[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("Input[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("Input[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("Input[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Input";
}

SIGNAL("InputMux:inst3|DataOutVoltage")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("InputMux:inst3|DataOutVoltage[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "InputMux:inst3|DataOutVoltage";
}

SIGNAL("InputMux:inst3|DataOutVoltage[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "InputMux:inst3|DataOutVoltage";
}

SIGNAL("InputMux:inst3|DataOutVoltage[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "InputMux:inst3|DataOutVoltage";
}

SIGNAL("InputMux:inst3|DataOutVoltage[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "InputMux:inst3|DataOutVoltage";
}

SIGNAL("InputMux:inst3|DataOutVoltage[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "InputMux:inst3|DataOutVoltage";
}

SIGNAL("InputMux:inst3|DataOutVoltage[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "InputMux:inst3|DataOutVoltage";
}

TRANSITION_LIST("ledsegment[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("ledsegment[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 12.5;
	}
}
TRANSITION_LIST("ledsegment[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 12.5;
	}
}
TRANSITION_LIST("ledsegment[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 12.5;
	}
}
TRANSITION_LIST("ledsegment[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1997.5;
	}
}
TRANSITION_LIST("ledsegment[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1997.5;
	}
}
TRANSITION_LIST("ledsegment[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1997.5;
	}
}
TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.5;
	}
}
TRANSITION_LIST("Current_register[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Current_register[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12.5;
		LEVEL 1 FOR 1987.5;
	}
}
TRANSITION_LIST("Current_register[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12.5;
		LEVEL 1 FOR 1987.5;
	}
}
TRANSITION_LIST("Current_register[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12.5;
		LEVEL 1 FOR 1987.5;
	}
}
TRANSITION_LIST("Input[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Input[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Input[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Input[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Input[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("Input[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
	}
}
TRANSITION_LIST("Input[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
	}
}
TRANSITION_LIST("Input[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
	}
}
TRANSITION_LIST("InputMux:inst3|DataOutVoltage[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("InputMux:inst3|DataOutVoltage[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("InputMux:inst3|DataOutVoltage[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}
TRANSITION_LIST("InputMux:inst3|DataOutVoltage[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1997.5;
	}
}
TRANSITION_LIST("InputMux:inst3|DataOutVoltage[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1997.5;
	}
}
TRANSITION_LIST("InputMux:inst3|DataOutVoltage[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1997.5;
	}
}


DISPLAY_LINE
{
	CHANNEL = "ledsegment";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7;
}

DISPLAY_LINE
{
	CHANNEL = "ledsegment[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ledsegment[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ledsegment[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ledsegment[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ledsegment[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ledsegment[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ledsegment[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Current_register[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Input";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
	CHILDREN = 27, 28, 29, 30, 31, 32, 33, 34;
}

DISPLAY_LINE
{
	CHANNEL = "Input[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Input[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Input[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Input[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Input[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Input[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Input[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "Input[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "InputMux:inst3|DataOutVoltage";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39, 40, 41;
}

DISPLAY_LINE
{
	CHANNEL = "InputMux:inst3|DataOutVoltage[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "InputMux:inst3|DataOutVoltage[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "InputMux:inst3|DataOutVoltage[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "InputMux:inst3|DataOutVoltage[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "InputMux:inst3|DataOutVoltage[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "InputMux:inst3|DataOutVoltage[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 35;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
